{"version":3,"sources":["Components/StartPage.js","Components/Icons.js","Components/Counter.js","Components/Head.js","Components/OverBody.js","Components/Arms.js","App.js","serviceWorker.js","index.js"],"names":["StartPage","className","to","id","src","Icons","borderChead","borderCoverBody","borderCarm","headLink","overbodyLink","armLink","armsDisplay","headDisplay","overbodyDisplay","style","borderColor","display","alt","Counter","count","countColor","ausDisplay","einDisplay","color","Head","getPoses","poses","keypoints","counterId","document","querySelector","lEyeY","position","y","rEyeY","audio","relaxMusic","state","play","pause","side","classList","add","setState","countL","countR","remove","onEstimate","this","scaleHead","headDispla","Component","OverBody","nose","x","overbodyDispla","Arms","lWrist","rWrist","lElbow","rElbow","armsDispla","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"okBAgCeA,EA5BG,WAChB,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,OAAd,yBACA,sBAAKA,UAAU,YAAf,UACE,gPAOA,cAAC,IAAD,CAAMA,UAAU,QAAQC,GAAG,QAA3B,sBAIA,sBAAKC,GAAG,SAAR,UACE,qBAAKC,IAAI,wBAET,qBAAKA,IAAI,iCAET,qBAAKA,IAAI,kCC+BJC,G,OApDD,SAAC,GAUR,IATLC,EASI,EATJA,YACAC,EAQI,EARJA,gBACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,SACAC,EAKI,EALJA,aACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,gBAEA,OACE,mCACE,sBAAKb,UAAU,QAAf,UACE,cAAC,IAAD,CAAMC,GAAIO,EAAV,SACE,qBACEM,MAAO,CACLC,YAAY,GAAD,OAAKV,GAChBW,QAAQ,GAAD,OAAKJ,IAEdT,IAAI,sBACJc,IAAI,WAGR,cAAC,IAAD,CAAMhB,GAAIQ,EAAV,SACE,qBACEK,MAAO,CACLC,YAAY,GAAD,OAAKT,GAEhBU,QAAQ,GAAD,OAAKH,IAEdX,GAAG,cACHC,IAAI,+BACJc,IAAI,eAGR,cAAC,IAAD,CAAMhB,GAAIS,EAAV,SACE,qBACER,GAAG,SACHY,MAAO,CACLC,YAAY,GAAD,OAAKR,GAChBS,QAAQ,GAAD,OAAKL,IAEdR,IAAI,sBACJc,IAAI,kB,iDChCDC,G,OAdC,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAChD,OACE,sBAAKpB,GAAG,WAAR,UACE,qBAAKY,MAAO,CAAEE,QAAQ,GAAD,OAAKM,IAAgBnB,IAAI,wBAC9C,sBAAMD,GAAG,cAAT,SACE,oBAAIA,GAAG,UAAUY,MAAO,CAAES,MAAOH,GAAcpB,UAAU,UAAzD,SACGmB,MAGL,qBAAKL,MAAO,CAAEE,QAAQ,GAAD,OAAKK,IAAgBlB,IAAI,6BCoFrCqB,G,wDAxFb,aAAe,IAAD,8BACZ,gBASFC,SAAW,SAACC,GACV,GAAKA,EAAM,IAAOA,EAAM,GAAGC,UAA3B,CAGA,IAAMC,EAAYC,SAASC,cAAc,YACnCC,EAAQL,EAAM,GAAGC,UAAU,GAAGK,SAASC,EACvCC,EAAQR,EAAM,GAAGC,UAAU,GAAGK,SAASC,EACvCE,EAAQN,SAASC,cAAc,UAC/BM,EAAaP,SAASC,cAAc,eACtC,EAAKO,MAAMlB,MAAQ,EACrBgB,EAAMG,OAENH,EAAMI,QAEJ,EAAKF,MAAMlB,MAAQ,EACrBiB,EAAWE,OAEXF,EAAWG,QAET,EAAKF,MAAMlB,MAAQ,GACjBY,GAASG,IACa,SAApB,EAAKG,MAAMG,KACTT,EAAQ,GAAKG,IACfN,EAAUa,UAAUC,IAAI,oBACxB,EAAKC,SAAS,CAAEC,OAAQ,EAAKP,MAAMlB,MAAQ,EAAGqB,KAAM,YAGlDT,EAAQ,GAAKG,IACfN,EAAUa,UAAUC,IAAI,oBACxB,EAAKC,SAAS,CAAEE,OAAQ,EAAKR,MAAMlB,MAAQ,EAAGqB,KAAM,SAEpDZ,EAAUa,UAAUK,OAAO,qBAG3B,EAAKT,MAAMO,OAAS,IACpB,EAAKP,MAAMO,QAAU,EAAKP,MAAMQ,QAEhC,EAAKF,SAAS,CAAExB,MAAO,EAAKkB,MAAMlB,MAAQ,QA7ClD,EAAKkB,MAAQ,CACXlB,MAAO,GACPyB,OAAQ,GACRC,OAAQ,GACRL,KAAM,QANI,E,0CAqDd,WACE,OACE,qCACE,cAAC,IAAD,CAASO,WAAYC,KAAKvB,SAAUzB,UAAU,YAC9C,cAAC,EAAD,CACEmB,MAAO6B,KAAKX,MAAMlB,MAAQ,EAAnB,UAA0B6B,KAAKX,MAAMlB,OAAU,SACtDC,WAAY4B,KAAKX,MAAMlB,MAAQ,EAAI,QAAU,GAC7CG,WACqB,SAAnB0B,KAAKX,MAAMG,MAEPQ,KAAKX,MAAMlB,MAAQ,EADnB,OAGA,GAENE,WAA+B,QAAnB2B,KAAKX,MAAMG,KAAiB,OAAS,UAEnD,cAAC,EAAD,CACEnC,YAAa2C,KAAKX,MAAMlB,MAAQ,EAAI,QAAU,cAC9C8B,UAAWD,KAAKX,MAAMlB,MAAQ,EAAnB,oBACX+B,WAAW,QACXrC,gBAAiBmC,KAAKX,MAAMlB,MAAQ,EAAI,OAAS,QACjDR,YAAaqC,KAAKX,MAAMlB,MAAQ,EAAI,OAAS,QAC7CX,SAAS,QACTC,aAAa,YACbC,QAAQ,UAEV,uBAAOP,IAAI,UAAUD,GAAG,UACxB,uBACEC,IAAI,0DACJD,GAAG,sB,GAnFMiD,cC6EJC,E,kDA7Eb,aAAe,IAAD,8BACZ,gBAQF3B,SAAW,SAACC,GACV,GAAKA,EAAM,IAAOA,EAAM,GAAGC,UAA3B,CAIA,IAAM0B,EAAO3B,EAAM,GAAGC,UAAU,GAAGK,SAC7BG,EAAQN,SAASC,cAAc,UAC/BM,EAAaP,SAASC,cAAc,eACtC,EAAKO,MAAMlB,MAAQ,EACrBgB,EAAMG,OAENH,EAAMI,QAEJ,EAAKF,MAAMlB,MAAQ,EACrBiB,EAAWE,OAEXF,EAAWG,QAET,EAAKF,MAAMlB,MAAQ,GACjBkC,IACsB,SAApB,EAAKhB,MAAMG,KACTa,EAAKC,EAAI,KACX,EAAKX,SAAS,CAAExB,MAAO,EAAKkB,MAAMlB,MAAQ,EAAGqB,KAAM,UAGjDa,EAAKC,EAAI,KACX,EAAKX,SAAS,CAAExB,MAAO,EAAKkB,MAAMlB,MAAQ,EAAGqB,KAAM,YAjC3D,EAAKH,MAAQ,CACXlB,MAAO,GAEPqB,KAAM,QALI,E,0CA0Cd,WACE,OACE,qCACE,cAAC,IAAD,CAASO,WAAYC,KAAKvB,SAAUzB,UAAU,YAC9C,cAAC,EAAD,CACEmB,MAAO6B,KAAKX,MAAMlB,MAAQ,EAAnB,UAA0B6B,KAAKX,MAAMlB,OAAU,SACtDC,WAAY4B,KAAKX,MAAMlB,MAAQ,EAAI,QAAU,GAC7CG,WACqB,SAAnB0B,KAAKX,MAAMG,MAEPQ,KAAKX,MAAMlB,MAAQ,EADnB,OAGA,GAENE,WAA+B,QAAnB2B,KAAKX,MAAMG,KAAiB,OAAS,UAEnD,cAAC,EAAD,CACElC,gBAAiB0C,KAAKX,MAAMlB,MAAQ,EAAI,QAAU,cAClDoC,eAAe,QACf3C,YAAaoC,KAAKX,MAAMlB,MAAQ,EAAI,OAAS,QAC7CR,YAAaqC,KAAKX,MAAMlB,MAAQ,EAAI,OAAS,QAC7CX,SAAS,QACTC,aAAa,YACbC,QAAQ,UAEV,uBAAOP,IAAI,UAAUD,GAAG,UACxB,uBACEC,IAAI,0DACJD,GAAG,sB,GAvEUiD,aC2FRK,E,kDA1Fb,aAAe,IAAD,8BACZ,gBAOF/B,SAAW,SAACC,GACV,GAAKA,EAAM,IAAOA,EAAM,GAAGC,UAA3B,CAGA,IAAM8B,EAAS/B,EAAM,GAAGC,UAAU,GAC5B+B,EAAShC,EAAM,GAAGC,UAAU,IAC5BgC,EAASjC,EAAM,GAAGC,UAAU,GAC5BiC,EAASlC,EAAM,GAAGC,UAAU,GAC5BQ,EAAQN,SAASC,cAAc,UAC/BM,EAAaP,SAASC,cAAc,eAEtC,EAAKO,MAAMlB,MAAQ,EACrBgB,EAAMG,OAENH,EAAMI,QAGJ,EAAKF,MAAMlB,MAAQ,EACrBiB,EAAWE,OAEXF,EAAWG,QAGT,EAAKF,MAAMlB,MAAQ,GAEnBsC,GACAE,GACAD,GACAE,GACAH,EAAOzB,UACP2B,EAAO3B,UACP0B,EAAO1B,UACP4B,EAAO5B,WAEiB,OAApB,EAAKK,MAAMG,MAEXmB,EAAO3B,SAASC,EAAI,GAAKwB,EAAOzB,SAASC,GACzC2B,EAAO5B,SAASC,EAAI,GAAKyB,EAAO1B,SAASC,IAEzC,EAAKU,SAAS,CAAEH,KAAM,UAItBmB,EAAO3B,SAASC,EAAI,GAAKwB,EAAOzB,SAASC,GACzC2B,EAAO5B,SAASC,EAAI,GAAKyB,EAAO1B,SAASC,IAEzC,EAAKU,SAAS,CAAExB,MAAO,EAAKkB,MAAMlB,MAAQ,EAAGqB,KAAM,UApD3D,EAAKH,MAAQ,CACXlB,MAAO,GACPqB,KAAM,MAJI,E,0CA6Dd,WACE,OACE,qCACE,cAAC,IAAD,CAASO,WAAYC,KAAKvB,SAAUzB,UAAU,YAC9C,cAAC,EAAD,CACEmB,MAAO6B,KAAKX,MAAMlB,MAAQ,EAAnB,UAA0B6B,KAAKX,MAAMlB,OAAU,SACtDC,WAAY4B,KAAKX,MAAMlB,MAAQ,EAAI,QAAU,GAC7CG,WAAY,QACZD,WAAY,SAEd,cAAC,EAAD,CACEd,WAAYyC,KAAKX,MAAMlB,MAAQ,EAAI,QAAU,cAC7C0C,WAAW,QACXjD,YAAaoC,KAAKX,MAAMlB,MAAQ,EAAI,OAAS,QAC7CN,gBAAiBmC,KAAKX,MAAMlB,MAAQ,EAAI,OAAS,QACjDX,SAAS,QACTC,aAAa,YACbC,QAAQ,UAEV,uBAAOP,IAAI,UAAUD,GAAG,UACxB,uBACEC,IAAI,0DACJD,GAAG,sB,GApFMiD,a,cCmCJW,MA/Bf,WACE,OACE,qBAAK9D,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CACEQ,SAAS,QACTC,aAAa,YACbC,QAAQ,QACRE,YAAY,OACZC,gBAAgB,OAChBF,YAAY,SAEd,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,eCpBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3C,SAAS4C,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.adf1e73c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./startPage.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst StartPage = () => {\r\n  return (\r\n    <div className=\"startPage\">\r\n      <h1 className=\"logo\">Coder Break</h1>\r\n      <div className=\"startInfo\">\r\n        <p>\r\n          Are you tired and want to refresh yourself? So without further ado ,\r\n          let's get startet and do some exercises proven by health experts.\r\n          There are tree exercises: one for the neck, the upper body and the\r\n          arms.\r\n        </p>\r\n\r\n        <Link className=\"start\" to=\"/head\">\r\n          Let's go\r\n        </Link>\r\n\r\n        <div id=\"images\">\r\n          <img src=\"Figur-Kopf-Anim.gif\" />\r\n\r\n          <img src=\"Figur-oberkörper-Anim.gif\" />\r\n\r\n          <img src=\"Figur-arme-anim.gif\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import React from \"react\";\r\nimport \"./icons.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst Icons = ({\r\n  borderChead,\r\n  borderCoverBody,\r\n  borderCarm,\r\n  headLink,\r\n  overbodyLink,\r\n  armLink,\r\n  armsDisplay,\r\n  headDisplay,\r\n  overbodyDisplay,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"icons\">\r\n        <Link to={headLink}>\r\n          <img\r\n            style={{\r\n              borderColor: `${borderChead}`,\r\n              display: `${headDisplay}`,\r\n            }}\r\n            src=\"Figur-Kopf-Anim.gif\"\r\n            alt=\"head\"\r\n          />\r\n        </Link>\r\n        <Link to={overbodyLink}>\r\n          <img\r\n            style={{\r\n              borderColor: `${borderCoverBody}`,\r\n\r\n              display: `${overbodyDisplay}`,\r\n            }}\r\n            id=\"overBodyImg\"\r\n            src=\"Figur-oberkörper-Anim.gif\"\r\n            alt=\"overBody\"\r\n          />\r\n        </Link>\r\n        <Link to={armLink}>\r\n          <img\r\n            id=\"armImg\"\r\n            style={{\r\n              borderColor: `${borderCarm}`,\r\n              display: `${armsDisplay}`,\r\n            }}\r\n            src=\"Figur-arme-anim.gif\"\r\n            alt=\"arms\"\r\n          />\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","import React from \"react\";\r\nimport \"./counter.css\";\r\nconst Counter = ({ count, countColor, ausDisplay, einDisplay }) => {\r\n  return (\r\n    <div id=\"counters\">\r\n      <img style={{ display: `${einDisplay}` }} src=\"Arrows-einatmen.gif\" />\r\n      <span id=\"counterSpan\">\r\n        <h1 id=\"counter\" style={{ color: countColor }} className=\"counter\">\r\n          {count}\r\n        </h1>\r\n      </span>\r\n      <img style={{ display: `${ausDisplay}` }} src=\"Arrows-ausatmen.gif\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Icons from \"./Icons\";\r\nimport PoseNet from \"react-posenet\";\r\nimport Counter from \"./Counter\";\r\n\r\nimport \"./homepage.css\";\r\nclass Head extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 10,\r\n      countL: 10,\r\n      countR: 10,\r\n      side: \"left\",\r\n    };\r\n  }\r\n\r\n  getPoses = (poses) => {\r\n    if (!poses[0] || !poses[0].keypoints) {\r\n      return;\r\n    }\r\n    const counterId = document.querySelector(\"#counter\");\r\n    const lEyeY = poses[0].keypoints[1].position.y;\r\n    const rEyeY = poses[0].keypoints[2].position.y;\r\n    const audio = document.querySelector(\"#audio\");\r\n    const relaxMusic = document.querySelector(\"#relaxMusic\");\r\n    if (this.state.count < 1) {\r\n      audio.play();\r\n    } else {\r\n      audio.pause();\r\n    }\r\n    if (this.state.count > 1) {\r\n      relaxMusic.play();\r\n    } else {\r\n      relaxMusic.pause();\r\n    }\r\n    if (this.state.count > 0) {\r\n      if (lEyeY && rEyeY) {\r\n        if (this.state.side === \"left\") {\r\n          if (lEyeY - 30 > rEyeY) {\r\n            counterId.classList.add(\"counterAnimation\");\r\n            this.setState({ countL: this.state.count - 1, side: \"right\" });\r\n          }\r\n        } else {\r\n          if (lEyeY + 30 < rEyeY) {\r\n            counterId.classList.add(\"counterAnimation\");\r\n            this.setState({ countR: this.state.count - 1, side: \"left\" });\r\n\r\n            counterId.classList.remove(\"counterAnimation\");\r\n          }\r\n          if (\r\n            this.state.countL < 10 &&\r\n            this.state.countL == this.state.countR\r\n          ) {\r\n            this.setState({ count: this.state.count - 1 });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <PoseNet onEstimate={this.getPoses} className=\"posenet\" />\r\n        <Counter\r\n          count={this.state.count > 0 ? `${this.state.count}` : \"✔\"}\r\n          countColor={this.state.count < 1 ? \"green\" : \"\"}\r\n          einDisplay={\r\n            this.state.side == \"right\"\r\n              ? \"none\"\r\n              : this.state.count < 1\r\n              ? \"none\"\r\n              : \"\"\r\n          }\r\n          ausDisplay={this.state.side == \"left\" ? \"none\" : \"block\"}\r\n        />\r\n        <Icons\r\n          borderChead={this.state.count < 1 ? \"green\" : \"transparent\"}\r\n          scaleHead={this.state.count < 1 ? `scale(1.2,1.2)` : ``}\r\n          headDispla=\"block\"\r\n          overbodyDisplay={this.state.count > 0 ? \"none\" : \"block\"}\r\n          armsDisplay={this.state.count > 0 ? \"none\" : \"block\"}\r\n          headLink=\"/head\"\r\n          overbodyLink=\"/overBody\"\r\n          armLink=\"/arms\"\r\n        />\r\n        <audio src=\"end.mp3\" id=\"audio\"></audio>\r\n        <audio\r\n          src=\"2020-02-22_-_Relaxing_Green_Nature_-_David_Fesliyan.mp3\"\r\n          id=\"relaxMusic\"\r\n        ></audio>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Head;\r\n","import React, { Component } from \"react\";\r\nimport Icons from \"./Icons\";\r\nimport PoseNet from \"react-posenet\";\r\nimport Counter from \"./Counter\";\r\nimport \"./homepage.css\";\r\nclass OverBody extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 10,\r\n\r\n      side: \"left\",\r\n    };\r\n  }\r\n\r\n  getPoses = (poses) => {\r\n    if (!poses[0] || !poses[0].keypoints) {\r\n      return;\r\n    }\r\n\r\n    const nose = poses[0].keypoints[0].position;\r\n    const audio = document.querySelector(\"#audio\");\r\n    const relaxMusic = document.querySelector(\"#relaxMusic\");\r\n    if (this.state.count < 1) {\r\n      audio.play();\r\n    } else {\r\n      audio.pause();\r\n    }\r\n    if (this.state.count > 1) {\r\n      relaxMusic.play();\r\n    } else {\r\n      relaxMusic.pause();\r\n    }\r\n    if (this.state.count > 0) {\r\n      if (nose) {\r\n        if (this.state.side === \"left\") {\r\n          if (nose.x > 380) {\r\n            this.setState({ count: this.state.count - 1, side: \"right\" });\r\n          }\r\n        } else {\r\n          if (nose.x < 135) {\r\n            this.setState({ count: this.state.count - 1, side: \"left\" });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <PoseNet onEstimate={this.getPoses} className=\"posenet\" />\r\n        <Counter\r\n          count={this.state.count > 0 ? `${this.state.count}` : \"✔\"}\r\n          countColor={this.state.count < 1 ? \"green\" : \"\"}\r\n          einDisplay={\r\n            this.state.side == \"right\"\r\n              ? \"none\"\r\n              : this.state.count < 1\r\n              ? \"none\"\r\n              : \"\"\r\n          }\r\n          ausDisplay={this.state.side == \"left\" ? \"none\" : \"block\"}\r\n        />\r\n        <Icons\r\n          borderCoverBody={this.state.count < 1 ? \"green\" : \"transparent\"}\r\n          overbodyDispla=\"block\"\r\n          headDisplay={this.state.count > 0 ? \"none\" : \"block\"}\r\n          armsDisplay={this.state.count > 0 ? \"none\" : \"block\"}\r\n          headLink=\"/head\"\r\n          overbodyLink=\"/overBody\"\r\n          armLink=\"/arms\"\r\n        />\r\n        <audio src=\"end.mp3\" id=\"audio\"></audio>\r\n        <audio\r\n          src=\"2020-02-22_-_Relaxing_Green_Nature_-_David_Fesliyan.mp3\"\r\n          id=\"relaxMusic\"\r\n        ></audio>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OverBody;\r\n","import React, { Component } from \"react\";\r\nimport Icons from \"./Icons\";\r\nimport PoseNet from \"react-posenet\";\r\nimport Counter from \"./Counter\";\r\nimport \"./homepage.css\";\r\nclass Arms extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 10,\r\n      side: \"up\",\r\n    };\r\n  }\r\n\r\n  getPoses = (poses) => {\r\n    if (!poses[0] || !poses[0].keypoints) {\r\n      return;\r\n    }\r\n    const lWrist = poses[0].keypoints[9];\r\n    const rWrist = poses[0].keypoints[10];\r\n    const lElbow = poses[0].keypoints[7];\r\n    const rElbow = poses[0].keypoints[8];\r\n    const audio = document.querySelector(\"#audio\");\r\n    const relaxMusic = document.querySelector(\"#relaxMusic\");\r\n\r\n    if (this.state.count < 1) {\r\n      audio.play();\r\n    } else {\r\n      audio.pause();\r\n    }\r\n\r\n    if (this.state.count > 1) {\r\n      relaxMusic.play();\r\n    } else {\r\n      relaxMusic.pause();\r\n    }\r\n\r\n    if (this.state.count > 0) {\r\n      if (\r\n        lWrist &&\r\n        lElbow &&\r\n        rWrist &&\r\n        rElbow &&\r\n        lWrist.position &&\r\n        lElbow.position &&\r\n        rWrist.position &&\r\n        rElbow.position\r\n      ) {\r\n        if (this.state.side === \"up\") {\r\n          if (\r\n            lElbow.position.y - 30 > lWrist.position.y ||\r\n            rElbow.position.y - 30 > rWrist.position.y\r\n          ) {\r\n            this.setState({ side: \"down\" });\r\n          }\r\n        } else {\r\n          if (\r\n            lElbow.position.y + 30 < lWrist.position.y ||\r\n            rElbow.position.y + 30 < rWrist.position.y\r\n          ) {\r\n            this.setState({ count: this.state.count - 1, side: \"up\" });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <PoseNet onEstimate={this.getPoses} className=\"posenet\" />\r\n        <Counter\r\n          count={this.state.count > 0 ? `${this.state.count}` : \"✔\"}\r\n          countColor={this.state.count < 1 ? \"green\" : \"\"}\r\n          einDisplay={\" none\"}\r\n          ausDisplay={\"none\"}\r\n        />\r\n        <Icons\r\n          borderCarm={this.state.count < 1 ? \"green\" : \"transparent\"}\r\n          armsDispla=\"block\"\r\n          headDisplay={this.state.count > 0 ? \"none\" : \"block\"}\r\n          overbodyDisplay={this.state.count > 0 ? \"none\" : \"block\"}\r\n          headLink=\"/head\"\r\n          overbodyLink=\"/overBody\"\r\n          armLink=\"/arms\"\r\n        />\r\n        <audio src=\"end.mp3\" id=\"audio\"></audio>\r\n        <audio\r\n          src=\"2020-02-22_-_Relaxing_Green_Nature_-_David_Fesliyan.mp3\"\r\n          id=\"relaxMusic\"\r\n        ></audio>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Arms;\r\n","import React from \"react\";\r\nimport StartPage from \"./Components/StartPage\";\r\nimport Icons from \"./Components/Icons\";\r\nimport Head from \"./Components/Head\";\r\nimport OverBody from \"./Components/OverBody\";\r\nimport Arms from \"./Components/Arms\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"body\">\r\n      <BrowserRouter>\r\n        <Icons\r\n          headLink=\"/head\"\r\n          overbodyLink=\"/overBody\"\r\n          armLink=\"/arms\"\r\n          headDisplay=\"none\"\r\n          overbodyDisplay=\"none\"\r\n          armsDisplay=\"none\"\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <StartPage />\r\n          </Route>\r\n          <Route path=\"/head\">\r\n            <Head />\r\n          </Route>\r\n          <Route path=\"/arms\">\r\n            <Arms />\r\n          </Route>\r\n          <Route path=\"/overBody\">\r\n            <OverBody />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}